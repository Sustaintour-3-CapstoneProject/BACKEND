name: ci/cd_capstone

on:
    push:
        branches:
            - main

jobs:
    test: ##menjalankan semua unit test
        runs-on: ubuntu-latest
        steps:
            - name: checkout the code
              uses: actions/checkout@v2
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: '1.21'
            - name: run test
              run: |
                go test -v ./...

    build-and-push-docker: ##Membuat image Docker berdasarkan kode dan tag dengan nama
        runs-on: ubuntu-latest
        needs: test
        steps:
            - name: checkout the code
              uses: actions/checkout@v2
            - name: create env file
              run: |
                echo "${{secrets.ENV}}" >> .env
            - name: build docker
              run: docker build -t ridhomauludin/tripwise:1.0.0 .
            - name: docker hub login
              uses: docker/login-action@v1
              with:  ## Login ke Docker Hub menggunakan kredensial rahasia
                username: ${{secrets.DOCKER_USER}}
                password: ${{secrets.DOCKER_TOKEN}}
            - name: push image
              run: docker push ridhomauludin/tripwise:1.0.0
    deploy: ## Menggunakan SSH untuk menyebarkan ke EC2.
      needs: build-and-push-docker
      runs-on: ubuntu-latest
      env:
        IMAGE_URI: 'ridhomauludin/tripwise:1.0.0'
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}

      steps: ##Menarik (pull) image Docker terbaru dari Docker Hub dan menjalankan container baru pada server.
        - name: Check out the code
          uses: actions/checkout@v2

        - name: Create PEM file from secret
          run: |
            echo "${{ secrets.EC2_PEM }}" > ec2-key.pem
            chmod 600 ec2-key.pem  # Set appropriate permissions

        - name: Deploy to EC2
          run: |
            ssh -i ec2-key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << EOF
              # Stop the current container if running
              sudo docker ps -q --filter "name=my-container" | grep -q . && sudo docker stop my-container || true
              sudo docker rm my-container || true

              # Pull the latest image from ECR
              sudo docker pull $IMAGE_URI

              # Run the new container
              sudo docker run -d --name my-container -p 8000:8000 $IMAGE_URI
            EOF 

        - name: Clean up PEM file
          run: rm -f ec2-key.pem